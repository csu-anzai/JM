/**
 * Реализуйте метод, сливающий два отсортированных по неубыванию массива чисел в один
 * отсортированный в том же порядке массив. Массивы могут быть любой длины, в том числе нулевой.
 * Предполагается, что вы реализуете алгоритм слияния, имеющий линейную сложность: он будет идти
 * по двум исходным массивам и сразу формировать отсортированный результирующий массив. Так, чтобы
 * сортировка полученного массива при помощи Arrays.sort() уже не требовалась. К сожалению,
 * автоматически это не проверить, так что это остается на вашей совести :)
 * Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода
 * добавит проверяющая система.
 * Пример
 * Если на вход подаются массивы {0, 2, 2} и {1, 3}, то на выходе должен получиться массив {0, 1, 2, 2, 3}
 */
package com.javamentor.Stepik_02_04_08;

import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] x1 = {8,2,3};     //создаем массив1
        int[] x2 = {5,6};       //создаем массив2
        System.out.println(mergeArrays(x1, x2));        //передаем их в метод в качестве параметров
    }

    public static int[] mergeArrays(int[] a1, int[] a2) {
        if (a1 == null) {       //если а1 нал - возвращаем а2 
            return a2;
        } if (a2 == null) {     //если а2 нал - возвращаем а1
            return a1;
        }
        int[] a3 = new int[a1.length + a2.length];      //создаем массив3 куда все кладем
        System.arraycopy(a1, 0, a3, 0, a1.length);      //копируем массив1
        System.arraycopy(a2, 0, a3, a1.length, a2.length);      //копируем массив2
        Arrays.sort(a3);        //сортируем массив3
//        System.out.println(Arrays.toString(a3));      //выводим в консоль массив3
        return a3;
    }
}